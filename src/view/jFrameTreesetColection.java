/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.sun.prism.j2d.J2DPresentable;
import datos.Producto;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;
import java.util.Vector;
import javafx.print.Collation;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
//import static javacolleciontreeset.JavaCollecionTreeset.mostrarLista;
//import static javacolleciontreeset.JavaCollecionTreeset.mostrarLista;

/**
 *
 * @author choqu_000
 */
public class jFrameTreesetColection extends javax.swing.JFrame {

    /**
     * Creates new form jFrameTreesetColection
     */
    //Atributos
    //Esta es una implementaci√≥n de TableModel utiliza para almacenar los valores en un vector.
    private DefaultTableModel model;
   
    public jFrameTreesetColection() {
        initComponents();
        mostrarDatosConJTableModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrimeraCollecion = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informacion"));

        jTablePrimeraCollecion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombe", "Cantidad", "Precion", "Descricion"
            }
        ));
        jScrollPane1.setViewportView(jTablePrimeraCollecion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    
    //Metodo mostrar
    public static void mostrarLista(Collection lista){
        System.out.println("Lista del producto " + lista.size() + " " + "Productos ");
        
        //interacion
        for(Iterator it = lista.iterator(); it.hasNext();){
            Producto producto = (Producto)it.next();
            System.out.println(producto);
            
            //jTablePrimeraCollecion = new (lista);
        }
        
    }
    //Metodo para mostrar la lista en una jarable
    public static void mostrarDatosUsuarioLogica(Collection lista){
        String titulos[]={"Nombre", "Cantidad", "Precio", "Descripcion"};
        //Atribuo para la obtecion de la matriz
       String informacion[][]=obtieneMatriz(lista);
        
    }
    //Metodo de obtecion de lista
    private static String[][] obtieneMatriz(Collection lista){
        
       
        return null;
    }
   
        

    //Mostrar datos en la Tabla
    private void mostrarDatosConJTableModel(){
         String titulo[] = {"Nombre","Cantiad","Precio", "Descripcion"};

       
        model=new DefaultTableModel(titulo, 0);
        
       //Clase Array para el producto
       ArrayList<Producto> productoListajTable = new ArrayList<>();
       /// instacioamos el la clase
        productoListajTable.add(new Producto("Pan " + " ", 10 , 75 , "Buen Sabor"));
        productoListajTable.add(new Producto("Leche "+ " ", 9, 16, "Buen Sabor"));
        productoListajTable.add(new Producto("Manzana " + " ", 27, 10, "Buen Sabor"));
        productoListajTable.add(new Producto("Brocoli " + " ", 79, 75, "Buen Sabor"));
        productoListajTable.add(new Producto("carne "+ " ", 75, 79, "Buen Sabor"));
        productoListajTable.add(new Producto("res " + " ", 6, 21, "Buen Sabor"));
        productoListajTable.add(new Producto("torta " + " ", 2, 27, "Buen Sabor"));
        productoListajTable.add(new Producto("azucar " + " ", 6, 7, "Buen Sabor"));
        productoListajTable.add(new Producto("Android " + " ", 6, 21, "Buen Beso"));
        productoListajTable.add(new Producto("ios " + " ", 9, 10, "Buen futuro de pareja"));
        
       
       
       //instancias de clase de producto
        Producto pan = new Producto("Pan " + " ", 10 , 75 , " Buen Sabor");
        Producto leche = new Producto("Leche "+ " ", 9, 16, "Buen Sabor");
        Producto manzana = new Producto("Manzana " + " ", 27, 10, "Buen Sabor");
        Producto brocoli = new Producto("Brocoli " + " ", 79, 75, "Buen Sabor");
        Producto carne = new Producto("carne "+ " ", 75, 79, "Buen Sabor");
        Producto res = new Producto("res " + " ", 6, 21, "Buen Sabor");
        Producto torta = new Producto("torta " + " ", 2, 27, "Buen Sabor");
        Producto azucar = new Producto("azucar " + " ", 6, 7, "Buen Sabor");
        Producto android = new Producto("Android " + " ", 6, 21, "Buen Beso");
        Producto ios = new Producto("ios " + " ", 9, 10, "Buen futuro de pareja");
        //Se define el treeset
        
        Set<Producto> listas = new TreeSet<>();
        listas.add(pan);
        listas.add(leche); 
        listas.add(manzana); 
        listas.add(brocoli); 
        listas.add(carne); 
        listas.add(res); 
        listas.add(torta);
        listas.add(azucar);
        listas.add(android);
        listas.add(ios);
        
// Imprimir contenido de TreeSet 
// Aunque se agregan 6 elementos, el TreeSet solo contiene 5 
// TreeSet no permite elementos duplicados, 
// TreeSet detecta que el elemento "Carne" esta duplicado 
// Notese que el orden del TreeSet refleja un orden ascendente  
        mostrarLista(listas);
        //Ciclo para la tabla
        for (Producto productoListajTableObjeto : productoListajTable) {
            String nombre = productoListajTableObjeto.getNombre();
            int cantidad = productoListajTableObjeto.getCantidad();
            int precio = productoListajTableObjeto.getPrecio();
            String descripcion = productoListajTableObjeto.getDescripcion();
            Object[] data ={nombre, cantidad, precio, descripcion};
            //jTablePrimeraCollecions.add(data);
            model.addRow(data);
        }
        
        jTablePrimeraCollecion.setModel(model);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePrimeraCollecion;
    // End of variables declaration//GEN-END:variables
}
